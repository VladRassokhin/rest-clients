apply plugin: 'idea'


idea {

    project {
        jdkName = '1.6'
        modules = subprojects*.idea.module
        ipr.withXml {
            provider ->
            provider.node.component.find { it.@name == 'VcsDirectoryMappings' }.mapping.@vcs = 'Git'
        }
    }

    module {

        downloadSources = true
        downloadJavadoc = true

        /**
         * Updating IDEA *.iml file.
         *
         * http://gradle.org/docs/current/userguide/idea_plugin.html
         * http://groovy.codehaus.org/api/groovy/util/NodeList.html
         * http://groovy.codehaus.org/api/groovy/util/Node.html
         */

        iml.withXml {
            provider ->

            final appendFolder = {
                Node node, String moduleName, String folderName ->

                node.appendNode( 'sourceFolder', [ url          : "file://\$MODULE_DIR\$/$moduleName/src/main/$folderName",
                                                   isTestSource : 'false' ])
                node.appendNode( 'sourceFolder', [ url          : "file://\$MODULE_DIR\$/$moduleName/src/test/$folderName",
                                                   isTestSource : 'true' ])
            }

            final moduleNames = subprojects*.name

            provider.node.component.content.first().with {

                appendNode( 'excludeFolder',     [ url : 'file://$MODULE_DIR$/gradle' ])
                appendNode( 'excludeFolder',     [ url : 'file://$MODULE_DIR$/out'    ])

                for ( String moduleName in moduleNames )
                {
                    for ( folderName in [ 'java', 'kotlin', 'resources' ]) {
                        appendFolder(( Node ) delegate, moduleName, folderName )
                    }

                    appendNode( 'excludeFolder', [ url : 'file://$MODULE_DIR$/' + moduleName + '/build' ])
                }
            }
        }
    }
}
