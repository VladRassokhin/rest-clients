apply plugin: 'idea'

buildscript {
    repositories {
//        maven   { url "${ System.properties[ 'user.home' ] }/.m2/repository" }
        mavenRepo url: 'http://evgenyg.artifactoryonline.com/evgenyg/repo/'
    }
    dependencies { classpath "com.github.goldin.plugins:gradle:0.1.4-SNAPSHOT" }
}

idea.project {
    jdkName = '1.6'
    ipr.withXml { provider -> provider.node.component.find { it.@name == 'VcsDirectoryMappings' }.mapping.@vcs = 'Git' }
}

idea.module {
    downloadSources = true
    downloadJavadoc = true

    /**
     * Updating IDEA *.iml file.
     *
     * http://gradle.org/docs/current/userguide/idea_plugin.html
     * http://groovy.codehaus.org/api/groovy/util/NodeList.html
     * http://groovy.codehaus.org/api/groovy/util/Node.html
     */

    iml.withXml {
        provider ->
        provider.node.component.content.first().with {

            appendNode( 'excludeFolder',     [ url : 'file://$MODULE_DIR$/gradle' ])
            appendNode( 'excludeFolder',     [ url : 'file://$MODULE_DIR$/out'    ])

            for ( moduleName in [ 'artifactory', 'common', 'teamcity', 'youtrack' ])
            {
                appendNode( 'sourceFolder',  [ url : 'file://$MODULE_DIR$/' + moduleName + '/src/main/kotlin', isTestSource : 'false' ])
                appendNode( 'sourceFolder',  [ url : 'file://$MODULE_DIR$/' + moduleName + '/src/test/kotlin', isTestSource : 'true' ])
                appendNode( 'excludeFolder', [ url : 'file://$MODULE_DIR$/' + moduleName + '/build' ])
            }
        }
    }
}


allprojects {

    apply plugin: 'kotlin'
    apply plugin: 'maven'
    // http://evgeny-goldin.com/wiki/Gradle-plugins
    apply plugin: 'about'
    apply plugin: 'duplicates'

    defaultTasks 'clean', 'build', 'about', 'install'

    sourceCompatibility  = 1.6
    group                = 'com.github.goldin.rest'

    repositories {
        mavenRepo url: 'http://evgenyg.artifactoryonline.com/evgenyg/repo/'
    }

    about        { dumpDependencies = true }
    duplicates   { configurations   = [ 'runtime' ]
                   verbose          = true }

    dependencies {
        compile 'org.jetbrains.kotlin:kotlin-stdlib:0.1-SNAPSHOT',
                // http://code.google.com/p/guava-libraries/
                'com.google.guava:guava:13.0-rc1',
                // http://code.google.com/p/google-http-java-client/
                'com.google.http-client:google-http-client:1.10.3-beta'
        runtime 'org.jetbrains.kotlin:kotlin-runtime:0.1-SNAPSHOT'
    }

    // "gradle clean" deletes IDEA 'out' folder.
    clean { delete( 'out' ) }

    task sourcesJar( type: Jar, dependsOn: classes ) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    task kdocJar( type: Jar, dependsOn: kdoc ) {
         classifier = 'javadoc'
         from kdoc.destinationDir
    }

    artifacts {
         archives sourcesJar
    //     archives kdocJar
    }
}


task wrapper( type: Wrapper ) { gradleVersion = '1.0' }
