
apply from: 'file:idea.gradle'


final kotlinVersion     = '0.1-SNAPSHOT' // http://repository.jetbrains.com/kotlin/org/jetbrains/kotlin/
final guavaVersion      = '13.0-rc1'     // http://search.maven.org/#search%7Cgav%7C1%7Cg%3A%22com.google.guava%22%20AND%20a%3A%22guava%22
final googleHttpVersion = '1.10.3-beta'  // http://search.maven.org/#search%7Cgav%7C1%7Cg%3A%22com.google.http-client%22%20AND%20a%3A%22google-http-client%22
final junitVersion      = '4.10'         // http://search.maven.org/#search%7Cgav%7C1%7Cg%3A%22junit%22%20AND%20a%3A%22junit%22


buildscript {
    repositories {
//        maven   { url "${ System.properties[ 'user.home' ] }/.m2/repository" }
        mavenRepo url: 'http://evgenyg.artifactoryonline.com/evgenyg/repo/'
    }
    dependencies { classpath "com.github.goldin.plugins:gradle:0.1.4-SNAPSHOT" }
}


allprojects {

    apply plugin: 'java'
    apply plugin: 'kotlin'        // https://github.com/evgeny-goldin/gradle-plugins
    apply plugin: 'maven'
    apply plugin: 'about'         // http://evgeny-goldin.com/wiki/Gradle-about-plugin
    apply plugin: 'duplicates'    // http://evgeny-goldin.com/wiki/Gradle-duplicates-plugin

    defaultTasks 'clean', 'build', 'about', 'install'

    sourceCompatibility  = 1.6
    group                = 'com.github.goldin.rest'

    repositories {
        mavenRepo url: 'http://evgenyg.artifactoryonline.com/evgenyg/repo/'
    }

    about        { dumpDependencies = true }
    duplicates   { configurations   = [ 'runtime' ]
                   verbose          = true }

    dependencies {
        compile     "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion",
                    "com.google.guava:guava:$guavaVersion",                        // https://code.google.com/p/guava-libraries/
                    "com.google.http-client:google-http-client:$googleHttpVersion" // http://code.google.com/p/google-http-java-client/
        runtime     "org.jetbrains.kotlin:kotlin-runtime:$kotlinVersion"
        testCompile "junit:junit:$junitVersion"
    }

    task sourcesJar( type: Jar, dependsOn: classes ) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    task kdocJar( type: Jar, dependsOn: kdoc ) {
         classifier = 'javadoc'
         from kdoc.destinationDir
    }

    artifacts {
         archives sourcesJar
    //     archives kdocJar
    }
}


/*
subprojects.findAll{ it.name != 'common' }.each {
    dependencies {
        compile project( ':common' )
    }
}
*/


task wrapper( type: Wrapper ) { gradleVersion = '1.0' }
