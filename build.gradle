apply plugin: 'idea'


final kotlinVersion     = '0.1.3395'     // http://repository.jetbrains.com/kotlin/org/jetbrains/kotlin/kotlin-compiler/
final guavaVersion      = '13.0.1'       // http://search.maven.org/#search%7Cgav%7C1%7Cg%3A%22com.google.guava%22%20AND%20a%3A%22guava%22
final googleHttpVersion = '1.11.0-beta'  // http://search.maven.org/#search%7Cgav%7C1%7Cg%3A%22com.google.http-client%22%20AND%20a%3A%22google-http-client%22
final slf4jVersion      = '1.7.1'        // http://search.maven.org/#search%7Cgav%7C1%7Cg%3A%22org.slf4j%22%20AND%20a%3A%22slf4j-api%22
final logbackVersion    = '1.0.7'        // http://search.maven.org/#search%7Cgav%7C1%7Cg%3A%22ch.qos.logback%22%20AND%20a%3A%22logback-classic%22
final junitVersion      = '4.10'         // http://search.maven.org/#search%7Cgav%7C1%7Cg%3A%22junit%22%20AND%20a%3A%22junit%22


defaultTasks 'clean', 'duplicates', 'compileKotlin', 'build', 'about', 'install'


buildscript {
    repositories {
        mavenRepo url: 'http://repository.jetbrains.com/kotlin/'
        mavenRepo url: 'http://evgenyg.artifactoryonline.com/evgenyg/repo/'
    }
    dependencies {
        classpath 'com.github.goldin.plugins.gradle:about:0.2-SNAPSHOT',
                  'com.github.goldin.plugins.gradle:duplicates:0.2-SNAPSHOT',
                  'com.github.goldin.plugins.gradle:kotlin:0.2-SNAPSHOT'
    }
}


idea.project {
    jdkName = '1.7'
    ipr.withXml { provider -> provider.node.component.find { it.@name == 'VcsDirectoryMappings' }.mapping.@vcs = 'Git' }
}

idea.module {
    iml.withXml {
        provider ->
        provider.node.component.content.first().with {
            appendNode( 'excludeFolder', [ url : 'file://$MODULE_DIR$/gradle' ])
            appendNode( 'excludeFolder', [ url : 'file://$MODULE_DIR$/out'    ])
        }
        provider.node.component.first().appendNode( 'orderEntry', [ type : 'library', name : 'Groovy', level: 'application' ])
    }
}


subprojects {

    apply plugin: 'idea'
    apply plugin: 'kotlin'
    apply plugin: 'maven'
    apply plugin: 'duplicates'
    apply plugin: 'about'


    sourceCompatibility  = 1.6
    group                = 'com.github.goldin.rest'

    idea.module {
        downloadSources = true
        downloadJavadoc = false
    }

    clean { delete( "$rootDir/out", "$rootDir/build" ) }


    repositories {
        mavenLocal()
        mavenRepo url: 'http://evgenyg.artifactoryonline.com/evgenyg/repo/'
    }


    dependencies {
        compile     "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion",
                    "org.slf4j:slf4j-api:$slf4jVersion",
                    "com.google.guava:guava:$guavaVersion",
                    "com.google.http-client:google-http-client:$googleHttpVersion",
                    "com.google.http-client:google-http-client-jackson2:$googleHttpVersion",
                    "org.apache.httpcomponents:httpclient:4.2.1"
        runtime     "org.jetbrains.kotlin:kotlin-runtime:$kotlinVersion"
        testCompile "junit:junit:$junitVersion",
                    files( compileTestKotlin.destinationDir )
        testRuntime "ch.qos.logback:logback-classic:$logbackVersion"
    }


    compileJava.dependsOn     compileKotlin
    compileTestJava.dependsOn compileKotlin, compileTestKotlin


    about        { dumpDependencies = true }
    duplicates   { configurations   = [ 'runtime' ]
                   verbose          = true }

    tasks.duplicates.dependsOn jar


    task sourcesJar( type: Jar, dependsOn: classes ) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }


    artifacts {
         archives sourcesJar
    }
}


subprojects.findAll{ it.name != 'common' }.each {
    Project p ->
    p.dependencies {
        compile     project( ':common' )
        testCompile files( project( ':common' ).tasks.compileTestKotlin.destinationDir )
    }
}


task wrapper( type: Wrapper ) { gradleVersion = '1.2' }
